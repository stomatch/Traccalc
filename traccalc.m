%% Программа тягового расчета для двух моделей движения
%
% 
% # Поезд - материальная точка
% # Поезд - нерастяжимая нить
% 
%%

format long;
tic
%% Секция глобальных переменных
global ksi
global traction %Характеристика силы тяги электровоза
global mp       %Масса поезда
global ml       %Масса электровоза (берется из файла тяговых характеристик электровоза)

ksi = 8.125*10^-3;
%%
% Инициализация переменных используемых в тяговом расчете
profile=0;      %Профиль пути
vn=0;           %Начальная скорость движения
sn=0;           %Начальная координата движения
tn=0;           %Начальное время
sk=10;          %Конечная координата движения
limitation=0;   %Матрица ограничений скорости
traction=0;     %Характеристика силы тяги электровоза
breaking_pn=0;  %Харатеристика пневматического торможения
breaking_el=0;  %Характеристика электрического торможения
ml=0;           %Масса локомотива
mp=0;           %Масса поезда (состава вагонов?)
res=0;          %Сопротивление движению поезда
wag_count=0;    %Количество вагонов в поезде
v=vn;           %Текущая скорость движения
s=sn;           %Текущая координата пути
t=tn;           %Текщее время движения
sr=0;           %Пока не помню зачем ввел эту переменную. 
                %Похоже просто впомогательная какая-то величина
%% Загрузка внешних данных
% Загружаем профиль пути
profile=dlmread('InputData/prof.csv',';');              
%%
% Загружаем тяговые характеристики
traction=dlmread('InputData\tx-vl10.csv',';');          
ml=traction(1,1);   % Выделяем из характеристик массу локомотива
%%
% Масса состава вагонов (без учета массы поезда)
mp=6000;            
%%
% Загружаем тормозные характеристики 
breaking_pn=dlmread('InputData\pnbreak.csv',';');       % Характеристика пневматического торможения
breaking_el=dlmread('InputData\rek_breaking.csv',';');  % Характеристика электрического торможения
%%
% Загружаем коэффициенты основного сопротивления движению поезда
res=dlmread('InputData\res.csv',';');   
%%
% Загружаем ограничения скорости на выбранном участке
limitation=dlmread('InputData\limitation.csv',';'); 

%% Расчет характеристик движения поезда для модели - "материальная точка"

%% 
% Движение в режме тяги (разгон)
%
% 
fprintf('Текущая координата: %d,км\n',s);
fprintf('Конечная координата расчета: %d,км\n',sk);
fprintf('Текущая скорость движения: %d,км/ч\n\n',v);
j=1;
i=0;
while s<sk-0.000001
    
    %%
    % Определяем ограничение скорости $v_{lim}$ для текущей координаты
    % поезда
    vlim=findLimV(limitation,s);
    fprintf('Ограничение скорости для текущей координаты S=%d,км - %d,км/ч \n',s,vlim(3));    
    %%
    % Ищем элемент профиля пути на который попадает текущая координата $S$
    cur_prof=findS(profile,s);
    disp('Характеристика текущего элемента профиля пути');
    fprintf('Порядковый номер:     %d\n',cur_prof(1));
    fprintf('Начальная координата: %f,км\n',cur_prof(2));
    fprintf('Величина уклона:      %0+f\n',cur_prof(3));
    fprintf('Длинна элемента:      %f,км\n',cur_prof(4));
    fprintf('Конечная координата:  %f,км\n\n',cur_prof(2)+cur_prof(4));
        
    %%
    % Определяем тяговую характеристику для текущей скорости $v$
    cur_tx=findTX(traction,v);
    disp('Параметры текущего элемента тяговой характеристики');
    fprintf('Порядковый номер:   %d\n',cur_tx(1));
    fprintf('Начальная скорость: %f,км/ч\n',cur_tx(2));
    fprintf('Конечная скорость:  %f,км/ч\n',cur_tx(3));
    disp('Коэффициенты:');
    fprintf('A: %f; B: %f; C: %f;\n',cur_tx(4),cur_tx(5),cur_tx(6));
    
    %%
    % Коэффициенты удельной тяговой характеристики
    cur_tx(4)=cur_tx(4)/(mp+ml);
    cur_tx(5)=cur_tx(5)/(mp+ml);
    cur_tx(6)=cur_tx(6)/(mp+ml);
    
    disp('Удельные коэффициенты тяговой характеристики:');
    fprintf('A: %f; B: %f; C: %f;\n\n',cur_tx(4),cur_tx(5),cur_tx(6));
        
    %%
    % Расчет параметров движения поезда в режиме тяги для заданных условий 
    % если флаг j==1 создаем вектор для результатов расчета параметров
    % движения, иначе к существующему вектору результатов (sr) добавляем
    % расчитанные параметры движения
    if j==1
        sr=throtle_pnt(cur_tx,cur_prof,res,v,vlim(1,3),s,t,sk);
    else
        sr=cat(1,sr,throtle_pnt(cur_tx,cur_prof,res,v,vlim(1,3),s,t,sk));
    end
    
    %%
    % определяем количество строк в векторе результатов расчета параметров
    % движения поезда
        j=size(sr,1);
    %%
    % Выводим текущие параметры движения поезда
    v=sr(j,1);
    s=sr(j,2);
    t=sr(j,3);
    fprintf('Текущие параметры движения поезда\n');
    fprintf('Скорость v:       %f,км/ч\n',v);
    fprintf('Координата S:     %f,км\n',s);
    fprintf('Время движения t: %f,ч\n',t);
       
    %%
    % пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ, пїЅпїЅ пїЅпїЅпїЅ пїЅпїЅпїЅ, пїЅпїЅпїЅпїЅ пїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ $S_k$
  
end

%% пїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ
%
sk=15;

cur_prof=findS(profile,s);
sr=cat(1,sr,runningdown(v,30.5,cur_prof,s,res,t));

%% пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ
plotRes(sr);

toc


%%

%пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅ пїЅпїЅпїЅ пїЅпїЅ, пїЅпїЅпїЅпїЅ s<sk, пїЅ.пїЅ. пїЅпїЅ пїЅпїЅпїЅ пїЅпїЅпїЅ пїЅпїЅпїЅпїЅ пїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
%пїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% while s<=sk
%     vlim=findLimV(limitation,s);
%     if v<vlim(1,3) %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅ
%         cur_tx=findTX(traction,v); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
%         % пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ
%         cur_tx(4)=cur_tx(4)/(mp+ml);
%         cur_tx(5)=cur_tx(5)/(mp+ml);
%         cur_tx(6)=cur_tx(6)/(mp+ml);
% 
%         cur_prof=findS(profile,s); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
%         j=size(sr);
%         if j(1,1)==1
%             sr=throtle_pnt(cur_tx,cur_prof,res,v,vlim(1,3),s,t,sk);
%         else
%             sr=cat(1, sr,throtle_pnt(cur_tx,cur_prof,res,v,vlim(1,3),s,t,sk));
%         end
%         
%         j=size(sr);
%         v=sr(j(1,1),1);
%         s=sr(j(1,1),2);
%         t=sr(j(1,1),3);
%     end
% end
%-----------------
% пїЅпїЅпїЅпїЅ пїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ
%-----------------
% while s<=sk
% cur_prof=findS(profile,s); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% j=size(sr);
% if j(1,1)==1
%     sr=runningdown(60,10,cur_prof,0,res,0);
% else
%     sr=cat(1, sr,runningdown(v,10,cur_prof,s,res,t));
% end
% j=size(sr);
% v=sr(j(1,1),1);
% s=sr(j(1,1),2);
% t=sr(j(1,1),3);
% end
% % пїЅ пїЅпїЅпїЅпїЅпїЅ пїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ sr пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ csv пїЅпїЅпїЅпїЅ
% % пїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ, пїЅ.пїЅ. пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% dlmwrite('resultdata\result.csv',sr,';');




% %% пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅ -----------------------------------------
% cur_tx=findTX(traction,v); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% % пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ
% cur_tx(4)=cur_tx(4)/(mp+ml);
% cur_tx(5)=cur_tx(5)/(mp+ml);
% cur_tx(6)=cur_tx(6)/(mp+ml);
% 
% cur_prof=findS(profile,s); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% sr=throtle_pnt(cur_tx,cur_prof,res,v,100,s,t);
% 
% cur_tx=findTX(traction,sr(11,1)); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% % пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ
% cur_tx(4)=cur_tx(4)/(mp+ml);
% cur_tx(5)=cur_tx(5)/(mp+ml);
% cur_tx(6)=cur_tx(6)/(mp+ml);
% 
% cur_prof=findS(profile,sr(11,2));
% 
% sr=cat(1, sr,throtle_pnt(cur_tx,cur_prof,res,sr(11,1),100,sr(11,2),sr(11,3)));
% 
% 
% cur_tx=findTX(traction,sr(22,1)); %пїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
% % пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ
% cur_tx(4)=cur_tx(4)/(mp+ml);
% cur_tx(5)=cur_tx(5)/(mp+ml);
% cur_tx(6)=cur_tx(6)/(mp+ml);
% 
% cur_prof=findS(profile,sr(22,2));
% 
% sr=cat(1, sr,throtle_pnt(cur_tx,cur_prof,res,sr(22,1),100,sr(22,2),sr(22,3)));